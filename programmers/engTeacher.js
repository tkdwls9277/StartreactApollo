// 문제 설명
// 중학교 영어교사인 현미는 방학동안 영단어 암기 카드를 만들어서 학생들에게 돌려 보면서 익히도록 하려 합니다. 각 학생들은 한 장씩 영단어 카드를 만들어 1번 학생은 자신이 만든 카드를 2번 학생에게, 2번 학생은 자신이 만든 카드를 3번 학생에게, 즉 모든 학생들이 자신의 다음 번호의 학생에게 카드를 전달했습니다. 마지막 번호인 학생은 자신이 만든 카드를 1번 학생에게 전달했습니다. 그 후에는 이 카드에 적힌 단어를 암기하고 나서 또 같은 방식으로 카드를 전달했고, 한 바퀴를 모두 돌아 이미 자신이 암기한 카드가 돌아오면 전달을 종료했습니다.

// 이렇게 했더니, 모든 학생이 모든 카드를 회람할 수 있다는 점은 좋았지만, 집이 멀다든지 앞뒤 번호 학생과 잘 만나지 않는 경우가 있다든지 해서 카드들이 한 바퀴 회람되는 데 걸리는 시간이 너무 길었습니다. 그래서 이번 학기에 현미는 아이디어 하나를 제시했습니다. 모든 학생들이 자신이 이번에 암기한 카드를 다음 번에 전달해 주고 싶은 학생을 한 명씩 지정하여, 다음 번호의 학생이 아니라 자신이 지정한 학생에게 카드를 전달하기로 한 것입니다. 단,카드를 전달하고 싶은 학생이 없다면 자신에게 돌아온 카드에 적힌 단어를 암기한 후 카드를 버리기로 했습니다. 또, 이미 한번 암기한 카드가 자신에게 다시 돌아오면 그 카드도 버리기로 했습니다.

// 예를 들어, 열 세 명의 학생으로 이루어진 학급에서 각 학생이 자신이 카드를 전달하고 싶은 학생을 지정한 표가 아래와 같다고 가정하겠습니다. 학생들은 모두 번호로만 표시합니다. 아무에게도 카드를 전달하지 않을 학생은 0 이 표기되어 있습니다.

// 학생 번호	전달할 학생 번호
// 1	5
// 2	9
// 3	13
// 4	1
// 5	0
// 6	0
// 7	11
// 8	1
// 9	7
// 10	12
// 11	9
// 12	9
// 13	2
// 이러한 새로운 규칙을 적용했더니, 카드가 전달되는 데 걸리는 시간을 줄일 수는 있었습니다. 그러나, 모처럼 학생들이 만든 카드들을 모든 학생들이 회람할 수 있도록 할 수는 없었습니다. 예를 들어 위 표에 따라 카드를 전달하는 과정을 그림으로 표시하면 다음과 같습니다.

// 그림1.png

// 학생들의 번호를 동그라미 안에 적어 표시하였고, 동그라미들 사이에 그어진 화살표는 카드의 전달 경로를 나타냅니다. 각 학생이 만든 카드가 자신을 포함하여 몇 명에게 전달되어 영단어 암기에 활용될 수 있었는지를 동그라미 주위에 붉은 숫자로 표시했습니다.

// 각 학생이 만든 카드가 가능한 많은 학생들에게 회람되도록 하고 싶었던 현미는 한 가지 아이디어를 냈습니다. 가장 많은 학생들에게 회람된 카드를 작성한 학생에게 상을 주겠다는 것입니다. 위 예에서는 3번 학생이 작성한 카드가 (3번 학생 본인을 포함하여) 여섯 명에게 회람되어 가장 높은 횟수를 기록했습니다.

// 각 학생이 자신이 만든 또는 받은 카드를 전달할 다음 학생의 번호가 담긴 배열 next_student가 매개변수로 주어질 때, 몇 번 학생이 만든 카드가 가장 많은 학생들에게 회람될지 return 하도록 solution 함수를 완성해주세요. 만약, 가장 많은 학생들에게 회람되는 카드가 두 장 이상이라면, 그 중 큰 번호를 가진 학생이 작성한 카드를 선택합니다.

// 제한사항
// next_student는 각 학생이 카드를 전달할 다른 학생의 번호를 나열한 배열입니다.
// 학생 수가 n명이라면, 학생들에게는 1번부터 n번까지 번호가 매겨져 있습니다.
// next_student의 k번째 원소는 k번 학생이 카드를 전달할 다른 학생의 번호입니다.
// next_student의 길이는 1 이상 1,000,000 이하입니다.
// next_student의 길이가 n 일때, 학생 수는 n 명입니다.
// next_student의 원소는 0 이상 (next_student 의 길이) 이하인 정수입니다.
// next_student의 k 번째 원소가 k인 경우 (자기 자신을 다른 학생으로 지목한 경우)는 없습니다.
// 원소가 0인 경우 그 학생은 자신이 만든카드와 받은 카드 모두 다른 학생에게 전달하지 않습니다.
// 입출력 예
// next_student	answer
// [5, 9, 13, 1, 0, 0, 11, 1, 7, 12, 9, 9, 2]	3
// [6, 10, 8, 5, 8, 10, 5, 1, 6, 7]	9
// 입출력 예 설명
// 입출력 예 #1

// 문제의 예시와 같습니다.

// 입출력 예 #2

// 다음 그림과 같은 방식으로 영단어 암기 카드가 전달됩니다. 각 학생이 작성한 카드를 회람하게 되는 학생들의 수를 붉은 색으로 표시했습니다.

// 그림2.png

// 이 예에서는 1, 5, 6, 7, 8, 10 번 학생의 카드는 각각 여섯 명씩에게 회람되며, 나머지 학생들인 2, 3, 4, 9 번 학생의 카드는 각각 일곱 명씩에게 회람됩니다. 일곱 명씩에게 회람되는 (가장 많은 학생들이 암기하게 되는) 카드를 작성한 학생들 중 가장 큰 번호를 가진 학생은 9 번입니다.